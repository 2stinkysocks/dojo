#!/bin/sh

cd /opt/pwn.college
eval "$(find /tmp -type f -path "*/devcontainers-*/env-loginInteractiveShell.json" -exec jq -r 'to_entries | .[] | "export \(.key)=\(.value | @sh)"' {} \;)"

if [ -n "$1" ]
then
    ACTION="$1"
    shift
else
    ACTION="start"
fi

case "$ACTION" in
    "enter")
        CONTAINER="user_$1"
        shift
        if [ -n "$USER" ]; then
            docker exec -it "$CONTAINER" bash
        else
            docker exec -it --user="$USER" "$CONTAINER" bash
        fi
        ;;

    "compose")
        docker compose --env-file=/opt/pwn.college/data/config.env "$@"
        ;;

    "shell")
        docker exec -it ctfd flask shell "$@"
        ;;

    "manage")
        docker exec -it ctfd python manage.py "$@"
        ;;

    "db")
        docker exec -it db mysql -pctfd -Dctfd ctfd "$@"
        ;;

    "backup")
        docker exec db mysqldump -pctfd --single-transaction --routines --triggers ctfd > "/tmp/db-backup-$(date -Iseconds).sql"
        ;;

    "logs")
        journalctl -u pwn.college -f
        ;;

    "restart")
        for cmd in 'build ctfd' 'kill ctfd' 'rm -f ctfd' 'up -d ctfd' 'logs -f ctfd'; do
            docker compose --env-file=/opt/pwn.college/data/config.env $cmd;
        done
        ;;

    "start")
        echo "[+] Setting up container runtime environment."
        container-setup.sh
        echo "[+] Starting systemd. If this is the first start, the challenge container"
        echo "    will be built, which will take a very long time."
        exec /usr/bin/systemd
        ;;

    *)
        echo "Unknown command."
        exit 1
        ;;
esac
